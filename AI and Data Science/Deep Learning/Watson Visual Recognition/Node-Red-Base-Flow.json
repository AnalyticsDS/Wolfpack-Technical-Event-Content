[{"id":"9289a19c.020f6","type":"subflow","name":"Process Image Results","info":"","in":[{"x":20,"y":460,"wires":[{"id":"692600cc.f0eb3"}]}],"out":[{"x":1540,"y":240,"wires":[{"id":"b83e1665.550a48","port":0}]},{"x":1740,"y":640,"wires":[{"id":"71d96a6f.eb0734","port":0}]}]},{"id":"69797dbb.a12fa4","type":"cloudant in","z":"9289a19c.020f6","name":"cloudant diamond","cloudant":"","database":"nfda_responses","service":"dpyle-node-red-cloudantNoSQLDB","search":"_idx_","design":"diamondSearch","index":"diamondSearch","x":650,"y":320,"wires":[["a7529bc6.45f338"]],"outputLabels":["msg.payload.Diamond"]},{"id":"f8e58b09.199d48","type":"debug","z":"9289a19c.020f6","name":"diamond result","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1600,"y":320,"wires":[]},{"id":"f27a4cd7.6648f","type":"cloudant in","z":"9289a19c.020f6","name":"cloudant chemical","cloudant":"","database":"nfpa_chemicals","service":"dpyle-node-red-cloudantNoSQLDB","search":"_idx_","design":"chemicalSearch","index":"chemicalSearch","x":650,"y":560,"wires":[["cf74ae02.0e9c"]]},{"id":"692600cc.f0eb3","type":"function","z":"9289a19c.020f6","name":"process image rec result","func":"var RedValue = \"0\";\nvar RedCompare = 0.0;\nvar BlueValue = \"0\";\nvar BlueCompare = 0.0;\nvar YellowValue = \"0\";\nvar YellowCompare = 0.0;\nvar WhiteValue = \"NONE\";\nvar WhiteCompare = 0.0;\nvar msgsWhiteStart = 3;\nvar WhiteValueTemp = \"0\";\n\nvar chemValue = [\n    [\"Blue\", \"0\"],   // index 0\n    [\"Red\", \"0\"],    // index 1\n    [\"Yellow\", \"0\"], // index 2\n    [\"None\", \"1\"],   // index 3\n    [\"OX\", \"0\"],     // index 4\n    [\"W\", \"0\"]       // index 5\n]\n\nvar chemMsg = \"\";\nvar chemMsg2 = [{}];\n\nvar msgs = [\n    '(Color:\"Blue\" AND ColorValue:\"' + BlueValue + '\")',\n    ' OR (Color:\"Red\" AND ColorValue:\"' + RedValue + '\")',\n    ' OR (Color:\"Yellow\" AND ColorValue:\"' + YellowValue + '\")',\n    ' OR (Color:\"White\" AND ColorValue:\"' + WhiteValue + '\")'\n];\n\nvar diamondMsg = \"\";\nvar diamondMsg2 = [{}];\n\nfor (h=0; h<msg.result.images[0].classifiers.length; h++) {\n    \n    for (i=0; i<msg.result.images[0].classifiers[h].classes.length; i++) {\n        if (msg.result.images[0].classifiers[h].classes[i].class.substr(0,4).toLowerCase() == \"blue\" && msg.result.images[0].classifiers[h].classes[i].score > BlueCompare){\n            BlueValue = msg.result.images[0].classifiers[h].classes[i].class.substr(5,1);\n            chemValue[0][1] = BlueValue;\n            msgs[0] = '(Color:\"Blue\" AND ColorValue:\"' + BlueValue + '\")';\n            BlueCompare = msg.result.images[0].classifiers[h].classes[i].score;\n        }\n\n        if (msg.result.images[0].classifiers[h].classes[i].class.substr(0,3).toLowerCase() == \"red\" && msg.result.images[0].classifiers[h].classes[i].score > RedCompare){\n            RedValue = msg.result.images[0].classifiers[h].classes[i].class.substr(4,1);\n            chemValue[1][1] = RedValue;\n            msgs[1] = ' OR (Color:\"Red\" AND ColorValue:\"' + RedValue + '\")';\n            RedCompare = msg.result.images[0].classifiers[h].classes[i].score;\n        }\n\n        if (msg.result.images[0].classifiers[h].classes[i].class.substr(0,6).toLowerCase() == \"yellow\" && msg.result.images[0].classifiers[h].classes[i].score > YellowCompare){\n            YellowValue = msg.result.images[0].classifiers[h].classes[i].class.substr(7,1);\n            chemValue[2][1] = YellowValue;\n            msgs[2] = ' OR (Color:\"Yellow\" AND ColorValue:\"' + YellowValue + '\")';\n            YellowCompare = msg.result.images[0].classifiers[h].classes[i].score;\n        }\n    \n        if (msg.result.images[0].classifiers[h].classes[i].class.substr(0,5).toLowerCase() == \"white\" && msg.result.images[0].classifiers[h].classes[i].score >= WhiteCompare){\n            WhiteValue = msg.result.images[0].classifiers[h].classes[i].class.substr(6,msg.result.images[0].classifiers[h].classes[i].class.length-6);\n        if (lower(WhiteValue.substring(WhiteValue.lastIndexOf('_') + 1)) == \"diamond\") {  // trim off \"-DIAMOND\"\n            WhiteValue = WhiteValue.substring(WhiteValue.lastIndexOf('_')-1);\n        }\n\n        \n/* If allow multiple white values, then may need logic similar to this and compare for any score > 0\n\n        if (WhiteValue != \"NONE\") {chemValue[3][1] = \"0\";} // if there is a white diamond value, NONE is zero \n        if (WhiteValue == \"OX\")   {chemValue[4][1] = \"1\";}\n        if (WhiteValue == \"W\" )   {chemValue[5][1] = \"1\";}\n*/\n/* disabled, None is assumed the default, do not need to detect it\n        if (WhiteValue == \"NONE\") {\n            chemValue[3][1] = \"1\"; // set None to 1\n            chemValue[4][1] = \"0\"; // set OX to 0\n            chemValue[5][1] = \"0\"; // set W to 0\n        }\n*/\n\n            if (WhiteValue == \"OX\") {\n                chemValue[3][1] = \"0\"; // set None to 0\n                chemValue[4][1] = \"1\"; // set OX to 1\n                chemValue[5][1] = \"0\"; // set W to 0\n            }\n            if (WhiteValue == \"W\" )   {\n                chemValue[3][1] = \"0\"; // set None to 0\n                chemValue[4][1] = \"0\"; // set OX to 0\n                chemValue[5][1] = \"1\"; // set W to 1\n            }\n\n            if (WhiteValue == \"WOLF\" )   {\n                chemValue[3][1] = \"1\"; // set None to 1\n                chemValue[4][1] = \"0\"; // set OX to 0\n                chemValue[5][1] = \"0\"; // set W to 0\n            }\n\n            WhiteCompare = msg.result.images[0].classifiers[h].classes[i].score;\n        \n// msgsWhiteStart starts at 3, is in place in case multiple white values are utilized in the future\n            msgs[msgsWhiteStart] = ' OR (Color:\"White\" AND ColorValue:\"' + WhiteValue + '\")';\n\n/* To handle multiple white values in future\n        msgsWhiteStart++;\n*/\n        }\n    }\n}\n\n\n// Force IBM Wolf if any portion detected\nif (BlueValue == \"I\" || RedValue == \"B\" || YellowValue == \"M\" || WhiteValue == \"WOLF\") {\n    BlueValue = \"I\";\n    chemValue[0][1] = BlueValue;\n    msgs[0] = '(Color:\"Blue\" AND ColorValue:\"' + BlueValue + '\")';\n\n    RedValue = \"B\";\n    chemValue[1][1] = RedValue;\n    msgs[1] = ' OR (Color:\"Red\" AND ColorValue:\"' + RedValue + '\")';\n\n    YellowValue = \"M\";\n    chemValue[2][1] = YellowValue;\n    msgs[2] = ' OR (Color:\"Yellow\" AND ColorValue:\"' + YellowValue + '\")';\n    \n    WhiteValue = \"WOLF\";\n    chemValue[3][1] = \"1\"; // set None to 1\n    chemValue[4][1] = \"0\"; // set OX to 0\n    chemValue[5][1] = \"0\"; // set W to 0\n}\n\nchemMsg = chemValue[0][0] + ':\"' + chemValue[0][1] + '\"';\nfor (i=1; i<chemValue.length; i++){  // start at 1 since index 0 already set\n    chemMsg = chemMsg + \" AND \" + chemValue[i][0] + ':\"' + chemValue[i][1] + '\"';\n}\n\nchemMsg2[0].payload = chemMsg;\n\nfor (i=0; i<msgs.length; i++){\n    diamondMsg = diamondMsg + msgs[i];\n}\n\ndiamondMsg2[0].payload = diamondMsg;\n\nreturn [diamondMsg2, chemMsg2];","outputs":2,"noerr":0,"x":270,"y":460,"wires":[["69797dbb.a12fa4"],["f27a4cd7.6648f"]]},{"id":"f37ebefb.61ac2","type":"debug","z":"9289a19c.020f6","name":"chemical result","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1800,"y":560,"wires":[]},{"id":"3281e45d.0ca7cc","type":"split","z":"9289a19c.020f6","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":1090,"y":560,"wires":[["7b96b555.df893c"]]},{"id":"71d96a6f.eb0734","type":"join","z":"9289a19c.020f6","name":"","mode":"custom","build":"array","property":"chemical","propertyType":"msg","key":"payload.Compound","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1550,"y":560,"wires":[["f37ebefb.61ac2"]]},{"id":"fdede47f.916338","type":"change","z":"9289a19c.020f6","name":"","rules":[{"t":"set","p":"diamond","pt":"msg","to":"payload","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1130,"y":320,"wires":[["b83e1665.550a48"]]},{"id":"a7529bc6.45f338","type":"split","z":"9289a19c.020f6","name":"","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":true,"addname":"","x":890,"y":320,"wires":[["fdede47f.916338"]]},{"id":"b83e1665.550a48","type":"join","z":"9289a19c.020f6","name":"","mode":"custom","build":"array","property":"diamond","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1350,"y":320,"wires":[["f8e58b09.199d48"]]},{"id":"7b96b555.df893c","type":"change","z":"9289a19c.020f6","name":"","rules":[{"t":"set","p":"chemical","pt":"msg","to":"payload.Compound","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1330,"y":560,"wires":[["71d96a6f.eb0734"]]},{"id":"cf74ae02.0e9c","type":"function","z":"9289a19c.020f6","name":"Null chemical handling","func":"if (msg.cloudant.total_rows == 0) { // check if empty array\n    msg.payload = 'No known chemicals';\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":900,"y":560,"wires":[["3281e45d.0ca7cc"]]},{"id":"5201503b.0f367","type":"tab","label":"Web NFPA","disabled":false,"info":"https://dpyle-node-red.mybluemix.net/homepage"},{"id":"27b00f78.2a7d3","type":"http in","z":"5201503b.0f367","name":"Get homepage","url":"/homepage","method":"get","swaggerDoc":"","x":220,"y":200,"wires":[["c0b638ba.618168"]]},{"id":"c0b638ba.618168","type":"template","z":"5201503b.0f367","name":"Form and Response Template","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":" <html>\n     <body>\n        <form action=\"/classify\" method=\"post\" enctype=\"multipart/form-data\">\n            <input type=\"file\" name=\"pic\" accept=\"image/*\"><br>\n            <input type=\"submit\" value=\"Submit\">\n        </form> \n        <div>Classifications:</div>\n        <div>\n            {{#result}}\n            <table>\n            <tr>\n                <th>Class</th>\n                <th>Score</th>\n                <th>Type</th>\n            </tr>\n            {{#images}}\n            {{#.}}\n            {{#classifiers}}\n            {{#.}}\n            {{#classes}}\n            {{#.}}\n                <tr>\n                    <td>{{class}}</td>\n                    <td>{{score}}</td> \n                    <td>{{&type_hierarchy}}</td>\n                </tr>                \n            {{/.}} \n            {{/classes}}            \n            {{/.}}            \n            {{/classifiers}}\n            {{/.}}\n            {{/images}}\n            </table>\n            {{/result}}\n        </div>\n     </body>\n</html>","x":456.5,"y":241,"wires":[["18a190ff.bb20ff"]]},{"id":"18a190ff.bb20ff","type":"http response","z":"5201503b.0f367","name":"","x":647,"y":194,"wires":[]},{"id":"bc8f78d4.4cf758","type":"function","z":"5201503b.0f367","name":"Determine File Path","func":"if (msg.req.files) {\n    var files = Object.keys(msg.req.files);\n    msg.payload = msg.req.files[files[0]][0].path;\n}\nreturn msg;","outputs":1,"noerr":0,"x":273.5,"y":388,"wires":[["31352255.c0bb2e"]]},{"id":"203cf004.6fdeb","type":"visual-recognition-v3","z":"5201503b.0f367","name":"","apikey":"","image-feature":"classifyImage","lang":"en","x":550,"y":440,"wires":[["49f2f466.25b4ac","c0b638ba.618168","81be56ff.c8a198"]]},{"id":"49f2f466.25b4ac","type":"debug","z":"5201503b.0f367","name":"","active":false,"tosidebar":true,"console":false,"complete":"result","x":590,"y":580,"wires":[]},{"id":"f28268b6.27a428","type":"file-buffer","z":"5201503b.0f367","name":"","mode":{"value":"asBuffer"},"x":340,"y":540,"wires":[["203cf004.6fdeb"]]},{"id":"31352255.c0bb2e","type":"function","z":"5201503b.0f367","name":"","func":"msg.params = [];\nmsg.params[\"owners\"] = [\"me\"];\nmsg.params[\"threshold\"] = 0.01;\nreturn msg;","outputs":1,"noerr":0,"x":120,"y":520,"wires":[["f28268b6.27a428","2b546d36.321682"]]},{"id":"2b546d36.321682","type":"debug","z":"5201503b.0f367","name":"Check payload","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":230,"y":620,"wires":[]},{"id":"bd95e32f.f255d","type":"httpInMultipart","z":"5201503b.0f367","name":"Classify Image","url":"/classify","method":"post","fields":"[{ \"name\":\"pic\"}]","swaggerDoc":"","x":165.5,"y":330,"wires":[["bc8f78d4.4cf758"]]},{"id":"81be56ff.c8a198","type":"subflow:9289a19c.020f6","z":"5201503b.0f367","name":"","x":800,"y":380,"wires":[["c0b638ba.618168"],[]]}]